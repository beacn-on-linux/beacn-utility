[package]
name = "beacn-utility"
version = "0.1.1"
edition = "2024"
authors = ["Craig McLure <craig@mclure.net>"]
description = "Allows Configuration of Beacn Devices"
repository = "https://github.com/beacn-on-linux/beacn-utility"
license = "MIT"
categories = ["hardware-support"]


[dependencies]
# Logging
log = "0.4.28"
simplelog = "0.12.2"
file-rotate = "0.8.0"
log-panics = { version = "2.1.0", features = ["with-backtrace"]}

# Error Handling
anyhow = "1.0.100"

# Enum Helpers
strum = "0.27.2"
strum_macros = "0.27.2"
enum-map = "2.7.3"

# Used for Sending and Receiving Messages
oneshot = "0.1.11"

# Used for SIMD EQ calculations
wide = "0.7.33"

# UI Framework and Window Management
egui = "0.32.3"
egui_extras = { version = "0.32.3", features = ["svg"] }
egui-winit = "0.32.3"
egui_glow = "0.32.3"
glutin = "0.32.3"

# Grab beacn-mic-lib for comms
beacn-lib = { git = "https://github.com/beacn-on-linux/beacn-lib.git", tag = "v0.1.0" }
#beacn-lib = { path = "../beacn-lib" }

# Used for Lazy Initialisation
once_cell = "1.21.3"

# Tray Handler
ksni = { version = "0.3.1", features = ["blocking"] }

# Image Handling
image = "0.25.8"
fontdue = "0.9.3"

# Apature Science Handheld Portal Device (autostart / background)
tokio = { version = "1.47.1", features = ["rt-multi-thread"] }
ashpd = { version = "0.12.0", features = ["raw_handle"] }

# For Creating .desktop files outside the flatpak runtime
rust-ini = "0.21.3"
xdg = "3.0.0"

# Profile Loading / Saving
serde = "1.0.228"
serde_json = "1.0.145"

# Sleep Management
zbus = "5.11.0"

# Pipeweaver Stuff
#pipeweaver-ipc = { git = "https://github.com/pipeweaver/pipeweaver" }
#pipeweaver-profile = { git = "https://github.com/pipeweaver/pipeweaver" }
#pipeweaver-shared = { git = "https://github.com/pipeweaver/pipeweaver" }

# WINDOWS: Useful primarily for testing and comparison
[target.'cfg(windows)'.dependencies]
uds_windows = "1.1.0"

# Packaging
[package.metadata.deb]
name = "beacn-utility"
assets = [
    ["target/release/beacn-utility", "usr/bin/", "755"],
    ["50-beacn.rules", "etc/udev/rules.d/", "644"],
    ["resources/icons/beacn-utility.png", "usr/share/icons/hicolor/48x48/apps/", "644"],
    ["resources/icons/beacn-utility-large.png", "usr/share/pixmaps/beacn-utility.png", "644"],
    ["resources/icons/beacn-utility.svg", "usr/share/icons/hicolor/scalable/apps/", "644"],
    ["resources/desktop/io.github.beacn_on_linux.beacn-utility.desktop", "usr/share/applications/", "644"],
]
maintainer-scripts = ".github/ci/DEBIAN/"
section = "sound"
priority = "optional"
depends = "$auto"
extended-description = """\
A utility for monitoring and controlling Beacn Devices
"""
revision = "1"

## cargo generate-rpm support..
[package.metadata.generate-rpm]
name = "beacn-utility"

assets = [
    { source = "target/release/beacn-utility", dest = "/usr/bin/beacn-utility", mode = "0755" },
    { source = "50-beacn.rules", dest = "/etc/udev/rules.d/50-beacn.rules", mode = "0644" },
    { source = "resources/icons/beacn-utility.png", dest = "/usr/share/icons/hicolor/48x48/apps/beacn-utility.png", mode = "0644" },
    { source = "resources/icons/beacn-utility-large.png", dest = "/usr/share/pixmaps/beacn-utility.png", mode = "0644" },
    { source = "resources/icons/beacn-utility.svg", dest = "/usr/share/icons/hicolor/scalable/apps/beacn-utility.svg", mode = "0644" },
    { source = "resources/desktop/io.github.beacn_on_linux.beacn-utility.desktop", dest = "/usr/share/applications/io.github.beacn_on_linux.beacn-utility.desktop", mode = "0644" },
]

# Tiny scriptlet, should reload udev if possible.
post_install_script = """
udevadm control --reload-rules || echo -e "\\033[0;31mReloading udev failed. You might need to reboot after installation.\\033[0m" 1>&2
udevadm trigger || echo -e "\\033[0;31mReloading udev failed. You might need to reboot after installation.\\033[0m" 1>&2
"""

#release = "1"

# Because we build under Ubuntu in CI, generate-rpm is unable to calculate the dependencies required (no access
# to rpm / yum), so we need to disable the auto and specify dependencies manually.
auto-req = "no"